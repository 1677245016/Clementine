/* This file is part of Clementine.
   Copyright 2012, David Sansome <me@davidsansome.com>
   
   Clementine is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   Clementine is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with Clementine.  If not, see <http://www.gnu.org/licenses/>.
*/

#ifndef CLEMENTINE_PLAYERDELEGATE_H
#define CLEMENTINE_PLAYERDELEGATE_H

#include <clementine/Player>

#include <boost/shared_ptr.hpp>

// TODO: If the C++ API is made public then a wrapper for Song needs to be
// added to the clementine namespace and PythonLanguage's SongConverter needs
// to somehow get the original object to avoid a double conversion.
class Song;

namespace clementine {

class PlayerDelegate {
public:
  PlayerDelegate();
  virtual ~PlayerDelegate();

  virtual void StateChanged(clementine::Player::State state);
  virtual void VolumeChanged(int percent);
  virtual void PositionChanged(int64_t microseconds);
  virtual void PlaylistFinished();
  virtual void SongChanged(const Song& song);
};

typedef boost::shared_ptr<PlayerDelegate> PlayerDelegatePtr;

} // namespace clementine

#endif // CLEMENTINE_PLAYERDELEGATE_H
